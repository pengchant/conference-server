<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.justcs.mapper.PrivilegeMapper" >
  <resultMap id="BaseResultMap" type="com.justcs.entity.Privilege" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="privilegename" property="privilegename" jdbcType="CHAR" />
    <result column="keyname" property="keyname" jdbcType="CHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="router" property="router" jdbcType="VARCHAR" />
    <result column="ismenu" property="ismenu" jdbcType="SMALLINT" />
    <result column="parentnodeid" property="parentnodeid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, privilegename, keyname, description, router, ismenu, parentnodeid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from privilege
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from privilege
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.justcs.entity.Privilege" >
    insert into privilege (id, privilegename, keyname, 
      description, router, ismenu, 
      parentnodeid)
    values (#{id,jdbcType=INTEGER}, #{privilegename,jdbcType=CHAR}, #{keyname,jdbcType=CHAR}, 
      #{description,jdbcType=VARCHAR}, #{router,jdbcType=VARCHAR}, #{ismenu,jdbcType=SMALLINT}, 
      #{parentnodeid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.justcs.entity.Privilege" >
    insert into privilege
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="privilegename != null" >
        privilegename,
      </if>
      <if test="keyname != null" >
        keyname,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="router != null" >
        router,
      </if>
      <if test="ismenu != null" >
        ismenu,
      </if>
      <if test="parentnodeid != null" >
        parentnodeid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="privilegename != null" >
        #{privilegename,jdbcType=CHAR},
      </if>
      <if test="keyname != null" >
        #{keyname,jdbcType=CHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="router != null" >
        #{router,jdbcType=VARCHAR},
      </if>
      <if test="ismenu != null" >
        #{ismenu,jdbcType=SMALLINT},
      </if>
      <if test="parentnodeid != null" >
        #{parentnodeid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.justcs.entity.Privilege" >
    update privilege
    <set >
      <if test="privilegename != null" >
        privilegename = #{privilegename,jdbcType=CHAR},
      </if>
      <if test="keyname != null" >
        keyname = #{keyname,jdbcType=CHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="router != null" >
        router = #{router,jdbcType=VARCHAR},
      </if>
      <if test="ismenu != null" >
        ismenu = #{ismenu,jdbcType=SMALLINT},
      </if>
      <if test="parentnodeid != null" >
        parentnodeid = #{parentnodeid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.justcs.entity.Privilege" >
    update privilege
    set privilegename = #{privilegename,jdbcType=CHAR},
      keyname = #{keyname,jdbcType=CHAR},
      description = #{description,jdbcType=VARCHAR},
      router = #{router,jdbcType=VARCHAR},
      ismenu = #{ismenu,jdbcType=SMALLINT},
      parentnodeid = #{parentnodeid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>